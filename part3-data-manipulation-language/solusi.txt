RELEASE 1:

1) Insert
    1.a) Insert 3 product type.
INSERT INTO product_type (ptype_id,ptype_name)
VALUES (1,'Makanan & Minuman'),(2,'Elektronik'),(3,'Fashion')
;
    1.b) Insert 2 product dengan product type id = 1
INSERT INTO products (product_name,ptype_id,product_price)
VALUES
('HiLo Choco Malt Hi Calcium 10 Sch',1,37800),
('Bango Kecap Manis Kemasan Pouch Refill 520Ml',1,35000)
;
    1.c) Insert 3 product dengan product type id = 2
INSERT INTO products (product_name,ptype_id,product_price)
VALUES
('Eggel Fit 3 Waterproof Portable Bluetooth Speaker',2,250000),
('Sony ZV E10 Sony ZVE10 Mirrorless Camera Kit 16-50mm',2,12239980),
('DJI Tello',2,1599000)
;
    1.d) Insert 3 product dengan product type id = 3
INSERT INTO products (product_name,ptype_id,product_price)
VALUES
('Executive Basic Easy Care Long Sleeve Shirt',3,199000),
('SISSAE, MONTE TOP',3,549000),
('Jam Tangan CASIO MQ-24UC-8B Wanita',3,339000)
;
    1.e) Insert product description pada setiap product.
INSERT INTO product_desc (product_id,product_description)
VALUES
(1,'HiLo Choco Malt. Nikmati segelas kebaikan susu cokelat malt yang TINGGI KALSIUM dan TINGGI 10 VITAMIN untuk level up aktivitas energik kamu setiap hari!'),
(2,'Bango Kecap Manis Kemasan Pouch Refill 520Ml'),
(3,'GARANSI: 1 Tahun. Features: Bluetooth, Hands-Free Call, True Wireless Stereo (TWS).'),
(4,'Garansi Resmi 1 Tahun PT. SONY INDONESIA + 2 Tahun Doss Protection Extended Warranty (Spesial untuk pembelian kamera atau lensa di Doss, mendapatkan FREE EXTENDED WARRANTY 2 Tahun GARANSI RESMI)'),
(5,'Drone kecil yang mengesankan dan menyenangkan ini juga membantu anak-anak dan orang dewasa mempelajari tentang pemograman pesawat nirawak. Dapatkan Tello dan temukan betapa hebatnya menerbangkan pesawat nirawak.'),
(6,'Blouse lengan panjang'),
(7,'Sleeveless plum colored shirt with embroidered front buttons and collar.'),
(8,'Tampilan : Analog, Diameter : 34.9 mm, Tebal : 7.8 mm, Water Resist')
;
    1.f) Insert 3 payment methods.
INSERT INTO payment_method (payment_name)
VALUES ('Kartu Kredit/Debit'),('Transfer VA'),('Tunai di Gerai Retail')
;

INSERT INTO payment_description (payment_id,payment_desc)
VALUES (1,'Pembayaran kartu kredit/debit bayar penuh atau cicilan 0% dengan cara memasukkan detail kartu kredit/debit setelah klik Bayar Sekarang.'),
(2,'Pembayaran hanya dapat dilakukan oleh nasabah Bank Alta melalui ATM, Internet Banking, dan Alta Online.'),
(3,'Pembayaran di Mitra Gerai dilakukan dengan kasir Mitra Gerai.')
;
    1.g) Insert 5 user pada tabel user.
INSERT INTO users
(username,fullname,mobile_phone,email,address,birth,status_user,gender,created_at,updated_at)
VALUES
('amiami','Ami A.','628111111111','amiami@alta.com','Sudarman No.12','1990-01-01',true,'P','2024-01-01 04:05:06','2024-02-03 04:05:06'),
('baimbaim','Baim B.','628121111111','baimbaim@alta.com','Thamrin No.12','1997-01-01',false,'L','2024-01-01 04:05:06','2024-01-20 04:05:06'),
('cacacece','Caca C.','628131111111','cacacece@alta.com','Soekarno No.12','1984-01-01',true,'P','2024-03-03 04:05:06','2024-02-06 04:05:06'),
('diondion','Dion D.','628141111111','diondion@alta.com','Hatta No.12','2002-01-01',true,'L','2024-02-01 04:05:06','2024-02-03 04:05:06'),
('elaela','Ela E.','628151111111','elaela@alta.com','Soetomo No.12','1999-01-01',false,'P','2024-02-04 04:05:06','2023-02-06 04:05:06')
;
    1.h) Insert 3 transaksi di masing-masing user (min 3 user). (soal berlanjut ke soal 1.j)
INSERT INTO transaction (user_id,transaction_date)
VALUES
(1,'2024-02-01'),
(1,'2024-02-02'),
(1,'2024-02-03'),
(2,'2024-02-02'),
(2,'2024-02-03'),
(2,'2024-02-04'),
(3,'2024-02-01'),
(3,'2024-02-03'),
(3,'2024-02-05'),
(4,'2024-02-02'),
(4,'2024-02-04'),
(4,'2024-02-05'),
(5,'2024-02-02'),
(5,'2024-02-04'),
(5,'2024-02-05')
;
    1.i) Insert 3 product di masing-masing transaksi.
INSERT INTO trans_detail (transaction_id,user_id,product_id,product_qty)
VALUES
(1,1,1,12),(1,1,2,6),(1,1,3,2),
(2,1,2,5),(2,1,3,2),(2,1,4,1),
(3,1,3,1),(3,1,4,1),(3,1,5,2),
(4,2,4,1),(4,2,5,1),(4,2,6,1),
(5,2,5,2),(5,2,6,1),(5,2,6,1),
(6,2,6,1),(6,2,5,1),(6,2,8,1),
(7,3,2,1),(7,3,8,1),(7,3,1,10),
(8,3,8,1),(8,3,1,10),(8,3,2,3),
(9,3,1,6),(9,3,3,2),(9,3,5,1),
(10,4,2,4),(10,4,4,1),(10,4,6,1),
(11,4,3,1),(11,4,5,1),(11,4,8,1),
(12,4,4,2),(12,4,6,1),(12,4,8,1),
(13,5,5,1),(13,5,4,1),(13,5,1,5),
(14,5,6,1),(14,5,8,1),(14,5,2,2),
(14,5,3,1),(14,5,1,3),(14,5,3,2)
;

2) Select
    2.a) Tampilkan nama user / pelanggan dengan gender Laki-laki / M.
SELECT fullname,gender
FROM users
WHERE gender = 'L'
;
    2.b) Tampilkan product dengan id = 3.
SELECT * FROM products
WHERE product_id = 3
;
    2.c) Tampilkan data pelanggan yang created_at dalam range 7 hari kebelakang dan mempunyai nama mengandung kata ‘a’.
SELECT * FROM users
WHERE created_at BETWEEN (NOW() - '1 WEEK' :: INTERVAL) AND NOW()
AND fullname LIKE '%a%'
;
    2.d) Hitung jumlah user / pelanggan dengan status gender Perempuan.
SELECT COUNT(1) 
FROM users
WHERE gender = 'P'
;
    2.e) Tampilkan data pelanggan dengan urutan sesuai nama abjad
SELECT * FROM users
ORDER BY fullname ASC
;
    2.f) Tampilkan 5 data transaksi dengan product id = 3
SELECT * FROM trans_detail
WHERE product_id = 3
LIMIT 5
;

3. Update
    3.a) Ubah data product id 1 dengan nama ‘product dummy’.
UPDATE products SET
product_name = 'product dummy'
WHERE product_id = 1
;
    3.b) Update qty = 3 pada transaction detail dengan product id 1.
UPDATE trans_detail SET
product_qty = 3
WHERE product_id = 1
;

4. Delete
    4.a) Delete data pada tabel product dengan id 1.
DELETE FROM products
WHERE product_id = 1
;
    4.b) Delete pada tabel product dengan product-type id 1.
DELETE FROM products
WHERE ptype_id = 1
;

RELEASE 2: Join, Union, Sub-query, Function

1. Gabungkan data transaksi dari user id 1 dan user id 2.
SELECT 
    td.trans_detail_id,
	u.fullname,
	p.product_name,
	td.product_qty,
	p.product_price,
	p.ptype_id
FROM 
    trans_detail td
	INNER JOIN users u USING (user_id)
	INNER JOIN products p USING (product_id)
WHERE user_id = 1 OR user_id = 2
;

2. Tampilkan jumlah harga transaksi user id 1.
SELECT
    COALESCE(SUM(p.product_price), 0 )
FROM 
    trans_detail td
	INNER JOIN users u USING (user_id)
	INNER JOIN products p USING (product_id)
WHERE user_id = 1
;

3. Tampilkan total transaksi dengan product type 2.
ELECT COUNT(1)
FROM 
    trans_detail td
	INNER JOIN users u USING (user_id)
	INNER JOIN products p USING (product_id)
WHERE ptype_id = 2
;

4. Tampilkan semua field table product dan field name table product type yang saling berhubungan.
SELECT
    p.product_id,
	p.product_name,
	p.ptype_id,
	pt.ptype_name
FROM products p
INNER JOIN product_type pt
    ON p.ptype_id = pt.ptype_id
;

5. Tampilkan semua field table transaction, field name table product dan field name table user.
SELECT 
    td.trans_detail_id,
	u.fullname,
	p.product_name,
	td.product_qty,
	p.product_price
FROM 
    trans_detail td
	INNER JOIN users u USING (user_id)
	INNER JOIN products p USING (product_id)
;

6. Tampilkan data products yang tidak pernah ada di tabel transaction_details dengan sub-query.
SELECT p.product_name
FROM products p
WHERE NOT EXISTS (
  SELECT td.product_id
  FROM trans_detail td
  WHERE td.product_id = p.product_id
);
--atau
SELECT product_name
FROM products
WHERE product_id NOT IN (
	SELECT product_id
	FROM trans_detail
);
